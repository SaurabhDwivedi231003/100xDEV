/*
      Read Notes.txt file for more information
==>> Side Effect : are operations that can affect components or cant/shouldn't be done during rerendering
                such as fech, setInterval, setTimeout, addEventListener, removeEventListener

==>> Hooks : useState , useEffect, useMemo, useCallback, useRef , useContext

   -> useState : used untill we dont need side effect example : need to connect with backend or setInterval kind thing are not introduced
   -> useEffect : used to do side effect like fetch, setInterval, setTimeout, addEventListener, removeEventListener
                serve as componentDidMount, componentDidUpdate, componentWillUnmount of class based component.
   -> useMemo : It means remembring some output given an input and not computing it again , like caching.
                pehle se hi output store karke rakhta hai, agar input same hai toh wahi output return karta hai.
   -> useCallback : It is used to remember a function and not create it again and again.
                It is used to memoize function which can help in optimizing the performance of the application , specially in cases of involving child components
                that rely on reference equality to prevent unnecessary renders.             

   -> Custom Hooks : hooks that can be customised as per our convinience or self made hooks.
   
*/ 

